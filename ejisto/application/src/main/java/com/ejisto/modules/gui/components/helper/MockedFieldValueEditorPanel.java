/*
 * Ejisto, a powerful developer assistant
 *
 * Copyright (C) 2011  Celestino Bellone
 *
 * Ejisto is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Ejisto is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package com.ejisto.modules.gui.components.helper;

import ch.lambdaj.function.closure.Closure0;
import com.ejisto.modules.dao.entities.MockedField;
import com.ejisto.util.GuiUtils;
import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;
import org.jdesktop.swingx.JXCollapsiblePane;
import org.jdesktop.swingx.JXLabel;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Collection;

import static com.ejisto.modules.controller.MockedFieldsEditorController.CANCEL_EDITING;
import static com.ejisto.modules.controller.MockedFieldsEditorController.STOP_EDITING;


/**
 * Created by IntelliJ IDEA.
 * User: celestino
 * Date: 12/19/10
 * Time: 1:47 PM
 */
public class MockedFieldValueEditorPanel extends JXCollapsiblePane implements ActionListener {
    private static final String TYPE_SELECTION = "typeSelection";
    private JXLabel title;
    private JXLabel type;
    private JComboBox genericType;
    private JButton ok;
    private JButton cancel;
    private Collection<String> types;
    private MockedField mockedField;
    private JPanel editor;
    private JPanel buttonsPanel;
    private String expression;
    private String fieldType;

    public MockedFieldValueEditorPanel() {
        $$$setupUI$$$();
    }

    public void init(MockedField mockedField, Collection<String> types, String title) {
        this.types = types;
        this.mockedField = mockedField;
        this.genericType.removeAllItems();
        for (String s : types) {
            this.genericType.addItem(s);
        }
        this.title.setText(title);
    }

    public JPanel getEditor() {
        return editor;
    }

    public String getFieldType() {
        return fieldType;
    }

    public String getExpression() {
        return expression;
    }

    private void createUIComponents() {
        setLayout(new BorderLayout());
        editor = new JPanel();
        editor.setPreferredSize(new Dimension(200, 100));
        title = new JXLabel("title");
        type = new JXLabel(GuiUtils.getMessage("wizard.properties.editor.complex.type"));
        genericType = new JComboBox();
        genericType.setAction(new CallbackAction("type", new Closure0() {{
            of(MockedFieldValueEditorPanel.this).onTypeSelected();
        }}));
        genericType.setActionCommand(TYPE_SELECTION);
        ok = new JButton("ok");
        ok.setActionCommand(STOP_EDITING);
        ok.addActionListener(this);
        cancel = new JButton("cancel");
        cancel.setActionCommand(CANCEL_EDITING);
        cancel.addActionListener(this);
        add(editor, BorderLayout.CENTER);
    }

    public void onTypeSelected() {
        fieldType = String.valueOf(genericType.getSelectedItem());
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        Action action = getActionMap().get(e.getActionCommand());
        if (action != null) action.actionPerformed(e);
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        editor.setLayout(new FormLayout("fill:max(d;4px):grow,left:4dlu:noGrow,fill:max(p;60px):grow,left:4dlu:noGrow,fill:216px:noGrow,left:9px:grow,fill:max(d;4px):noGrow", "center:d:noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow"));
        title.setText("title");
        CellConstraints cc = new CellConstraints();
        editor.add(title, cc.xyw(3, 1, 3));
        editor.add(type, cc.xy(3, 3));
        editor.add(genericType, cc.xy(5, 3));
        buttonsPanel = new JPanel();
        buttonsPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        editor.add(buttonsPanel, cc.xyw(3, 5, 3));
        buttonsPanel.add(ok);
        buttonsPanel.add(cancel);
        type.setLabelFor(genericType);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return editor;
    }
}
