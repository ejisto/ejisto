<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Ejisto, a powerful developer assistant
  ~
  ~ Copyright (C) 2010-2013 Celestino Bellone
  ~
  ~ Ejisto is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ Ejisto is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <bean id="springBridge" class="com.ejisto.util.SpringBridge" factory-method="getInstance"/>
    <bean id="containerManager" class="com.ejisto.modules.cargo.CargoManager"/>
    <bean id="ognlContext" class="ognl.OgnlContext"/>
    <bean id="sharedClassLoader" class="com.ejisto.core.classloading.SharedClassLoader" factory-method="getInstance"/>
    <bean id="httpServer" class="com.ejisto.modules.web.HTTPServer" factory-method="getInstance"/>
    <bean id="mockedFieldRepository" class="com.ejisto.modules.repository.MockedFieldsRepository"
          factory-method="getInstance"/>
    <bean id="settingsRepository" class="com.ejisto.modules.repository.SettingsRepository"
          factory-method="getInstance"/>
    <bean id="objectFactoryRepository" class="com.ejisto.modules.repository.ObjectFactoryRepository"
          factory-method="getInstance"/>
    <bean id="containersRepository" class="com.ejisto.modules.repository.ContainersRepository"
          factory-method="getInstance"/>
    <bean id="customObjectFactoryRepository" class="com.ejisto.modules.repository.CustomObjectFactoryRepository"
          factory-method="getInstance"/>
    <bean id="webApplicationRepository" class="com.ejisto.modules.repository.WebApplicationRepository"/>
    <bean id="taskManager" class="com.ejisto.modules.executor.TaskManager" factory-method="getInstance"/>
    <bean id="objectFactoryLoader" class="com.ejisto.modules.conf.ObjectFactoryLoader"/>
    <util:list id="taskDescriptors" value-type="com.ejisto.modules.executor.TaskDescriptor">
        <bean class="com.ejisto.modules.executor.TaskDescriptor">
            <property name="initialDelay" value="0"/>
            <property name="period" value="1"/>
            <property name="task" ref="objectFactoryLoader"/>
        </bean>
    </util:list>
    <util:map id="httpHandlers" value-type="com.sun.net.httpserver.HttpHandler" key-type="java.lang.String"
              map-class="java.util.concurrent.ConcurrentHashMap">
        <entry key="/">
            <bean class="com.ejisto.modules.web.handler.DefaultHandler"/>
        </entry>
        <entry key="/getField">
            <bean class="com.ejisto.modules.web.handler.MockedFieldRequestHandler"/>
        </entry>
        <entry key="/getCustomObjectFactory">
            <bean class="com.ejisto.modules.web.handler.CustomObjectFactoryHandler"/>
        </entry>
        <entry key="/getObjectFactory">
            <bean class="com.ejisto.modules.web.handler.ObjectFactoryHandler"/>
        </entry>
        <entry key="/getSettings">
            <bean class="com.ejisto.modules.web.handler.SettingsHandler"/>
        </entry>
    </util:map>
    <util:properties id="settings" location="classpath:/settings.properties"/>
    <bean id="settingsManager" class="com.ejisto.modules.conf.SettingsManager"/>
    <bean id="eventManager" class="com.ejisto.event.EventManager"/>
    <import resource="dao-context.xml"/>
</beans>